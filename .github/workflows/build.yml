name: Build SEED AC2 Firmware

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # 手动触发
    inputs:
      clean_build:
        description: 'Clean build (remove cache)'
        required: false
        type: boolean
        default: false

env:
  OPENWRT_DIR: openwrt

jobs:
  build:
    runs-on: ubuntu-22.04
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Check disk space
      run: df -h

    - name: Setup environment
      run: |
        # 设置脚本权限
        chmod +x scripts/*.sh
        echo "=== Script files ==="
        ls -la scripts/

    - name: Cache OpenWrt source
      uses: actions/cache@v3
      with:
        path: openwrt
        key: ${{ runner.os }}-openwrt-${{ hashFiles('scripts/dependencies.txt') }}
        restore-keys: |
          ${{ runner.os }}-openwrt-

    - name: Cache downloads
      uses: actions/cache@v3
      with:
        path: openwrt/dl
        key: ${{ runner.os }}-openwrt-dl-${{ hashFiles('scripts/dependencies.txt') }}
        restore-keys: |
          ${{ runner.os }}-openwrt-dl-

    - name: Install dependencies
      run: |
        sudo apt update
        xargs -a scripts/dependencies.txt sudo apt install -y
        sudo apt clean

    - name: Checkout OpenWrt source
      if: steps.cache.outputs.cache-hit != 'true' || inputs.clean_build
      run: |
        git clone --depth=1 https://github.com/immortalwrt/immortalwrt.git $OPENWRT_DIR

    - name: Debug file structure
      run: |
        echo "=== File Structure ==="
        pwd
        ls -la
        echo "=== Scripts ==="
        ls -la scripts/
        echo "=== Patches ==="
        find patches/ -type f 2>/dev/null || echo "No patches found"
        echo "=== Config ==="
        ls -la config/ 2>/dev/null || echo "config directory found (not configs)"

    - name: Apply patches
      run: |
        # 使用绝对路径
        CURRENT_DIR="$GITHUB_WORKSPACE"
        echo "Workspace: $CURRENT_DIR"
        
        cd $OPENWRT_DIR
        echo "Now in: $(pwd)"
        
        # 修复：使用正确的文件名 apply-patches.sh（连字符）
        if [ -f "$CURRENT_DIR/scripts/apply-patches.sh" ]; then
            echo "Applying patches..."
            "$CURRENT_DIR/scripts/apply-patches.sh"
        else
            echo "ERROR: apply-patches.sh not found at $CURRENT_DIR/scripts/apply-patches.sh"
            ls -la "$CURRENT_DIR/scripts/" || echo "scripts directory not found"
            exit 1
        fi

    - name: Verify patches
      run: |
        CURRENT_DIR="$GITHUB_WORKSPACE"
        cd $OPENWRT_DIR
        
        # 修复：使用正确的文件名 verify-patches.sh（连字符）
        if [ -f "$CURRENT_DIR/scripts/verify-patches.sh" ]; then
            "$CURRENT_DIR/scripts/verify-patches.sh"
        else
            echo "WARNING: verify-patches.sh not found"
        fi

    - name: Apply configuration
      run: |
        CURRENT_DIR="$GITHUB_WORKSPACE"
        cd $OPENWRT_DIR
        
        # 修复：使用正确的目录名 config（不是 configs）
        if [ -f "$CURRENT_DIR/config/seed-ac2.config" ]; then
            cat "$CURRENT_DIR/config/seed-ac2.config" >> .config
            make defconfig
            echo "✓ Configuration applied successfully"
        else
            echo "ERROR: seed-ac2.config not found at $CURRENT_DIR/config/seed-ac2.config"
            echo "Available config files:"
            ls -la "$CURRENT_DIR/config/" 2>/dev/null || echo "config directory not found"
            exit 1
        fi

    - name: Build firmware
      run: |
        cd $OPENWRT_DIR
        make -j2

    - name: Upload firmware
      uses: actions/upload-artifact@v4
      with:
        name: seed-ac2-firmware
        path: openwrt/bin/targets/mediatek/filogic/
        retention-days: 7